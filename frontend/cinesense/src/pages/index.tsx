"use client";

import Header from "@/components/Header";
import IntroBox from "@/components/IntroBox";
import { useState, useEffect } from "react"; // 1. ‡πÄ‡∏û‡∏¥‡πà‡∏° useEffect
import MovieForm from "@/components/MovieForm";
import LoadingScreen from "@/components/LoadingScreen";
import ResultScreen from "@/components/ResultScreen";
import { getCurrentUser } from "@/services/api";
import { submitMood } from "@/services/api"; // 2. ‡πÄ‡∏û‡∏¥‡πà‡∏° getCurrentUser
import { useRouter } from "next/navigation";

export default function HomePage() {
  const [step, setStep] = useState("intro");
  const [searchQuery, setSearchQuery] = useState("");
  const [movie, setMovie] = useState<any>(null);
  const [user, setUser] = useState<any>(null); // 3. ‡πÄ‡∏û‡∏¥‡πà‡∏° user state
  const router = useRouter();

  // 4. ‡πÄ‡∏û‡∏¥‡πà‡∏° useEffect ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user ‡πÄ‡∏°‡∏∑‡πà‡∏≠ component ‡πÇ‡∏´‡∏•‡∏î
  useEffect(() => {
    const fetchUser = async () => {
      const userData = await getCurrentUser();
      setUser(userData); // userData ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô null ‡∏´‡∏£‡∏∑‡∏≠ { user_id, username, ... }
      console.log("HomePage: ‡πÑ‡∏î‡πâ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• user:", userData);
    };
    fetchUser();
  }, []); // [] ‡∏´‡∏°‡∏≤‡∏¢‡∏ñ‡∏∂‡∏á‡πÉ‡∏´‡πâ‡∏£‡∏±‡∏ô‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ï‡∏≠‡∏ô‡πÇ‡∏´‡∏•‡∏î

  console.log("2. ‡∏Ñ‡πà‡∏≤ user ‡πÉ‡∏ô Render body:", user);
  const handleStart = () => setStep("form");

  const handleSubmit = async (formData: any) => {
    setStep("loading");
    try {
      const result = await submitMood(formData);
      console.log("Movie API Result:", result);
      setMovie(result);
      setSearchQuery(result.title);
      setStep("results");
    } catch (err) {
      console.error(err);
      alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
      setStep("intro");
    }
  };

  const handleHeaderSearch = async (query: string) => {
    setSearchQuery(query);
    setStep("loading");

    setTimeout(() => setStep("results"), 1500);
  };

  return (
    <div className="main-content">
      <div className="background-container"></div>
      
      {/* 5. ‡∏™‡πà‡∏á user ‡πÅ‡∏•‡∏∞ setUser ‡πÑ‡∏õ‡πÉ‡∏´‡πâ Header */}
      <Header onSearch={handleHeaderSearch} user={user} setUser={setUser} />

      {/* 6. ‡πÅ‡∏™‡∏î‡∏á landing page ‡∏´‡∏£‡∏∑‡∏≠ IntroBox ‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ user */}
      {step === "intro" && !user && (
        <div className="intro-box">
          <h1>üé¨ Welcome to CINESENSE</h1>
          <p>‡∏Ñ‡πâ‡∏ô‡∏û‡∏ö‡∏´‡∏ô‡∏±‡∏á‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ä‡∏∑‡πà‡∏ô‡∏ä‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏£‡∏±‡∏ö‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏´‡∏ô‡∏±‡∏á‡πÉ‡∏´‡∏°‡πà ‡πÜ ‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö‡∏£‡∏™‡∏ô‡∏¥‡∏¢‡∏°‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>

          {/* ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÄ‡∏ß‡πá‡∏ö‡∏™‡∏±‡πâ‡∏ô ‡πÜ */}
          <ul style={{ listStyle: "disc", margin: "1rem 0 2rem 1.5rem", color: "#ccc" }}>
            <li>‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏´‡∏ô‡∏±‡∏á‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏´‡∏ô‡∏±‡∏á‡∏Ñ‡∏•‡∏≤‡∏™‡∏™‡∏¥‡∏Å‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ</li>
            <li>‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏´‡∏ô‡∏±‡∏á‡∏ï‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</li>
            <li>‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÇ‡∏õ‡∏£‡∏î‡πÅ‡∏•‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏°‡∏´‡∏ô‡∏±‡∏á‡∏ó‡∏µ‡πà‡∏ä‡∏≠‡∏ö</li>
          </ul>

          <div style={{ display: "flex", justifyContent: "center", gap: "1rem" }}>
            <button className="start-btn" onClick={() => router.push("/login")}>
              Login
            </button>
            <button className="start-btn" onClick={() => router.push("/register")}>
              Register
            </button>
          </div>
        </div>
      )}
      
      {step === "intro" && user && <IntroBox onStart={handleStart} user={user} />}
      
      {step === "form" && <MovieForm onClose={() => setStep("intro")} />}
      {step === "loading" && <LoadingScreen />}
      {step === "results" && movie && (
        <ResultScreen onClose={() => setStep("intro")} query={searchQuery} movie={movie} />
      )}
    </div>
  );
}